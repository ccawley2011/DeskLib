DeskLib Debug library functions
-------------------------------


Introduction
------------

The DeskLib:Debug.h header file contains prototypes for a set of
debugging functions. The main idea is that these are macro-ed out
*unless* DeskLib_DEBUG is #defined. This allows you to put lots of
Debug_ calls in code, safe in the knowledge that they will disapear at
compile time, but allowing you to build a debug-version of your project
using 'cc -DDeskLib_DEBUG ...' from the same source code.

The most useful function is Debug_Printf(). This can be treated exactly
like printf.

To use the debug calls you need to first call dl_Debug_Initialise,
although if you forget to do this, the module will be initialised
automatically to send debug output to stderr.

See 'DeskLib:h_doc.Debug' for more information on all the Debug calls.

In addition, there is a Signal library, which detects signals and
displays their information in a Wimp error window, rather than allowing
the C runtime system to send them to stderr (usually invisible in a
desktop program) and then silently terminate your program.

Lastly, there is Debug_Assert(), which behaves like the ANSI C assert()
except that diagnostics are output using Debug_Printf. Like all the
Debug_ calls, Debug__Assert is compiled into your project only if
'DeskLib_DEBUG' is defined.

